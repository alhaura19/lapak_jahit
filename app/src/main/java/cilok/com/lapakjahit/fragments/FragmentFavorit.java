package cilok.com.lapakjahit.fragments;


import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.support.v4.app.Fragment;
import android.support.v4.widget.SwipeRefreshLayout;
import android.support.v7.widget.GridLayoutManager;
import android.support.v7.widget.RecyclerView;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import android.widget.Toast;

import java.util.ArrayList;

import cilok.com.lapakjahit.R;
import cilok.com.lapakjahit.activities.LoginActivity;
import cilok.com.lapakjahit.adapters.AdapterProduct;
import cilok.com.lapakjahit.callback.GetFavoritesCallback;
import cilok.com.lapakjahit.controller.UserController;
import cilok.com.lapakjahit.entity.Product;
import cilok.com.lapakjahit.log.L;
import cilok.com.lapakjahit.tasks.TaskFavorite;


/**
 * A simple {@link Fragment} subclass.
 */
public class FragmentFavorit extends Fragment implements SwipeRefreshLayout.OnRefreshListener {

    UserController userController;
    ImageView mImageViewBelomLogin;
    TextView mTextViewBelomLogin;
    Button mButtonLogin;

    private static final String STATE_FAVORITE = "state_favorite";
    private SwipeRefreshLayout mSwipeRefreshLayoutFavorite;
    //the recylerview containing showing all our message;
    private RecyclerView mRecylerFavoriteProduct;
    //the TextView containing error messages generated by Volley
    private TextView mTextError;

    private AdapterProduct mAdapter;
    private RecyclerView.LayoutManager mLayoutManager;
    private static ArrayList<Product> mListFavorites = new ArrayList<>();


    public FragmentFavorit() {
        // Required empty public constructor

    }

    Context context;

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container,
                             Bundle savedInstanceState) {
        // Inflate the layout for this fragment
        View layout = inflater.inflate(R.layout.fragment_favorit, container, false);
        context = layout.getContext();
        userController = new UserController(getActivity());

        mButtonLogin = (Button) layout.findViewById(R.id.button_login);
        mButtonLogin.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                Intent intent = new Intent(context, LoginActivity.class);
                startActivity(intent);
            }
        });
        mImageViewBelomLogin = (ImageView) layout.findViewById(R.id.image_view_pic_belom_login);
        mTextViewBelomLogin = (TextView) layout.findViewById(R.id.text_view_belom_login);

        mTextError = (TextView) layout.findViewById(R.id.textError);
        mSwipeRefreshLayoutFavorite = (SwipeRefreshLayout) layout.findViewById(R.id.swipeFavorite);
        mSwipeRefreshLayoutFavorite.setOnRefreshListener(this);
        mRecylerFavoriteProduct = (RecyclerView) layout.findViewById(R.id.listFavorite);

        mLayoutManager = new GridLayoutManager(getActivity(), 2);
        mRecylerFavoriteProduct.setLayoutManager(mLayoutManager);
        mAdapter = new AdapterProduct(getActivity());
        mRecylerFavoriteProduct.setAdapter(mAdapter);
        if (authenticate() == true) {
            mImageViewBelomLogin.setVisibility(View.GONE);
            mTextViewBelomLogin.setVisibility(View.GONE);
            mButtonLogin.setVisibility(View.GONE);
            if (savedInstanceState != null) {

                mListFavorites = savedInstanceState.getParcelableArrayList(STATE_FAVORITE);
                mAdapter.setListProduk(mListFavorites);
            } else {
                mSwipeRefreshLayoutFavorite.setRefreshing(true);
                TaskFavorite taskFavorite;
                taskFavorite = new TaskFavorite(getActivity());
                taskFavorite.getFavoritesDataInBackground(new GetFavoritesCallback() {
                    @Override
                    public void onGetFavoritesLoadedListener(ArrayList<Product> listFavorites) {
                        mAdapter.setListProduk(listFavorites);
                        mSwipeRefreshLayoutFavorite.setRefreshing(false);
                    }
                });
            }
//        }
        } else {
            L.m("Anda belom login");
        }
        return layout;
    }

    @Override
    public void onSaveInstanceState(Bundle outState) {
        super.onSaveInstanceState(outState);
        //save the movie list to a parcelable prior to rotation or configuration change
        outState.putParcelableArrayList(STATE_FAVORITE, mListFavorites);
    }


    private boolean authenticate() {
        return userController.getUserLoggedIn();
    }

    @Override
    public void onRefresh() {
        TaskFavorite taskFavorite;
        taskFavorite = new TaskFavorite(getActivity());
        taskFavorite.getFavoritesDataInBackground(new GetFavoritesCallback() {
            @Override
            public void onGetFavoritesLoadedListener(ArrayList<Product> listFavorites) {
                mListFavorites = listFavorites;
                if (mSwipeRefreshLayoutFavorite.isRefreshing()) {
                    mSwipeRefreshLayoutFavorite.setRefreshing(false);
                }
                Toast.makeText(getActivity(), "" + mListFavorites.size(), Toast.LENGTH_SHORT).show();
                mAdapter.setListProduk(mListFavorites);
            }
        });
    }


}
